name: pipeline
on: push

jobs:
  test:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2
      - name: Run Unit Tests
        run: |
              go fmt $(go list ./... | grep -v /vendor/)
              go vet $(go list ./... | grep -v /vendor/)
              go test -race $(go list ./... | grep -v /vendor/)

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags')
    steps:
        
      - name: Extract Version
        id: version_step
        run: |
          echo "##[set-output name=version;]VERSION=${GITHUB_REF#$"refs/tags/v"}"
          echo "##[set-output name=version_tag;]$GITHUB_REPOSITORY:${GITHUB_REF#$"refs/tags/v"}"
          echo "##[set-output name=latest_tag;]$GITHUB_REPOSITORY:latest"

      - name: Print Version
        run: |
          echo ${{steps.version_step.outputs.version_tag}}
          echo ${{steps.version_step.outputs.latest_tag}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: build and deploy branch image to ghcr.io
        if: ${{ github.event_name == 'push' }}
        env:
          USERNAME: ${{ github.actor }}
          GITHUB_SHA: ${{ github.sha}}
          GITHUB_REF: ${{ github.ref}}
        run: |
          docker login -u ${USERNAME} -p ${{ secrets.GITHUB_TOKEN }} ghcr.io
          docker buildx build --push \
              --build-arg VERSION=${{steps.version_step.outputs.version_tag}} \
              --platform linux/amd64,linux/arm64 \
              -t ghcr.io/superboomer/map-tile-provider:${ref} .

      - name: deploy tagged (latest) to ghcr.io
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        env:
          USERNAME: ${{ github.actor }}
          GITHUB_SHA: ${{ github.sha}}
          GITHUB_REF: ${{ github.ref}}
        run: |
          docker login -u ${USERNAME} -p ${{ secrets.GITHUB_TOKEN }} ghcr.io
          docker buildx build --push \
              --build-arg VERSION=${{steps.version_step.outputs.version_tag}} \
              --platform linux/amd64,linux/arm64 \
              -t ghcr.io/superboomer/map-tile-provider:latest \

